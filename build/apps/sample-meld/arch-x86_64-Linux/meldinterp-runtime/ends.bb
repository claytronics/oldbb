const unsigned char meld_prog[] = {0x7, 0x8, 0x13, 0x1C, 0x25, 0x31, 0x3A, 0x45, 0x4D, 0x0, 0x20, 0x0, 0x1, 0x4, 0x0, 0x2, 0x2, 0x0, 0x5, 0x77, 0x0, 0x0, 0x0, 0x4, 0x2, 0x0, 0x2, 0x0, 0xC6, 0x0, 0x0, 0x0, 0x3, 0x2, 0x0, 0x2, 0x0, 0xC7, 0x0, 0x0, 0x0, 0x5, 0x5, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0xC8, 0x0, 0x0, 0x0, 0x6, 0x2, 0x0, 0x2, 0x0, 0xC9, 0x0, 0x20, 0x0, 0x2, 0x4, 0x0, 0x2, 0x2, 0x0, 0x5, 0xCA, 0x0, 0x4, 0x0, 0x7, 0x1, 0x0, 0x2, 0x37, 0xE0, 0x31, 0x21, 0x3, 0x0, 0x41, 0x62, 0x30, 0x82, 0x1, 0x0, 0x0, 0x2, 0x30, 0x82, 0x0, 0x0, 0x1, 0x2, 0x30, 0x82, 0x2, 0x0, 0x2, 0x2, 0x38, 0x42, 0x3, 0x2, 0x30, 0xA3, 0x3, 0x0, 0x8, 0x43, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x37, 0xE0, 0x30, 0x61, 0x5, 0x0, 0x0, 0x0, 0xC2, 0x4, 0x49, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x62, 0x16, 0x0, 0x41, 0x23, 0x30, 0x82, 0x0, 0x0, 0x0, 0x3, 0x38, 0x42, 0x1, 0x3, 0x8, 0x63, 0x1, 0x0, 0x0, 0x0, 0x0, 0x37, 0xE0, 0x30, 0x61, 0x0, 0x0, 0x0, 0x0, 0xC2, 0x4, 0x43, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x62, 0x16, 0x0, 0x41, 0x23, 0x30, 0x82, 0x0, 0x0, 0x0, 0x3, 0x38, 0x42, 0x1, 0x3, 0x8, 0x63, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, };


char *tuple_names[] = {"neighbor", "neighborCount", "vacant", "setColor", "setColor2", "____robhgien", "tap", };

#include "extern_functions.bbh"
Register (*extern_functs[])() = {};

int extern_functs_args[] = {};



/*
PROCESS neighbor:
MOVE tuple TO reg 0
MOVE reverse[0.3] TO reg 1
ALLOC ____robhgien TO reg 2
MOVE 0.1 TO 2.0
MOVE 0.0 TO 2.1
MOVE 0.2 TO 2.2
MOVE reg 1 TO 2.3
MOVE 0.3 TO reg 3
SEND reg 2 TO reg 3 IN 0ms
RETURN


PROCESS neighborCount:
MOVE tuple TO reg 0
MOVE 5 TO reg 1
SET reg 2 TO 0.1 INT GREATER THAN 1
IF (2) THEN
ALLOC setColor2 TO reg 3
MOVE 0.0 TO 3.0
MOVE reg 1 TO 3.1
SEND reg 3 TO reg 3 IN 0ms
ENDIF
MOVE tuple TO reg 0
MOVE 0 TO reg 1
SET reg 2 TO 0.1 INT EQUAL 1
IF (2) THEN
ALLOC setColor2 TO reg 3
MOVE 0.0 TO 3.0
MOVE reg 1 TO 3.1
SEND reg 3 TO reg 3 IN 0ms
ENDIF
RETURN


PROCESS vacant:
RETURN


PROCESS setColor:
RETURN


PROCESS setColor2:
RETURN


PROCESS ____robhgien:
RETURN


PROCESS tap:
RETURN


*/

