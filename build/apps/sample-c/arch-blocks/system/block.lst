   1               		.file	"block.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               	.global	blockTick
  13               	blockTick:
  14               	.LFB6:
  15               		.file 1 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb"
   1:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #include "block.bbh"
   2:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
   3:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** threadvar int blockTickRunning = 0;
   4:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
   5:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** int accelReady=0;
   6:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
   7:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** // BlockTick
   8:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** //
   9:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** // Polling-based hack to step through and update block state, as necessary.
  10:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** //
  11:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** // Much of this can probably be done via ISRs and other state change triggers and this function eli
  12:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** void blockTick()
  13:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** {
  16               		.loc 1 13 0
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 1 */
  22               	.L__stack_usage = 1
  14:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   byte i;
  15:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  16:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #ifdef BBSIM
  17:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   if (this()->destroyed == 1) {
  18:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     // let neighbors know we are gone
  19:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     //tellNeighborsDestroyed(this());
  20:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     // and never do anything again
  21:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     pauseForever();
  22:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   }
  23:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #endif
  24:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   //int input;
  25:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   blockTickRunning = 1;
  23               		.loc 1 25 0
  24 0002 81E0      		ldi r24,lo8(1)
  25 0004 90E0      		ldi r25,0
  26 0006 8093 0000 		sts blockTickRunning,r24
  27 000a 9093 0000 		sts blockTickRunning+1,r25
  26:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  27:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   if(accelReady){
  28               		.loc 1 27 0
  29 000e 8091 0000 		lds r24,accelReady
  30 0012 9091 0000 		lds r25,accelReady+1
  31 0016 892B      		or r24,r25
  32 0018 01F0      		breq .L3
  28:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     if(newAccelData()){
  33               		.loc 1 28 0
  34 001a 0E94 0000 		call newAccelData
  35               	.LVL0:
  36 001e 892B      		or r24,r25
  37 0020 01F0      		breq .L3
  29:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       updateAccel();
  38               		.loc 1 29 0
  39 0022 0E94 0000 		call updateAccel
  40               	.LVL1:
  41               	.L3:
  30:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     }
  31:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   }
  32:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  33:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   checkTimeout();
  42               		.loc 1 33 0
  43 0026 0E94 0000 		call checkTimeout
  44               	.LVL2:
  34:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  35:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   checkTimer();
  45               		.loc 1 35 0
  46 002a 0E94 0000 		call checkTimer
  47               	.LVL3:
  36:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  37:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   for(i = 0; i < NUM_PORTS; ++i)
  48               		.loc 1 37 0
  49 002e C0E0      		ldi r28,0
  50               	.LVL4:
  51               	.L5:
  38:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     {
  39:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       // read from serial
  40:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       processBuffer(i);
  52               		.loc 1 40 0 discriminator 2
  53 0030 8C2F      		mov r24,r28
  54 0032 0E94 0000 		call processBuffer
  55               	.LVL5:
  41:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       
  42:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       // active messaging (handle at most one per port)
  43:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       handleOneMessage();
  56               		.loc 1 43 0 discriminator 2
  57 0036 0E94 0000 		call handleOneMessage
  58               	.LVL6:
  44:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       
  45:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       //send packets/ACKS
  46:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****       sendOnSerial(i);
  59               		.loc 1 46 0 discriminator 2
  60 003a 8C2F      		mov r24,r28
  61 003c 0E94 0000 		call sendOnSerial
  62               	.LVL7:
  37:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   for(i = 0; i < NUM_PORTS; ++i)
  63               		.loc 1 37 0 discriminator 2
  64 0040 CF5F      		subi r28,lo8(-(1))
  65               	.LVL8:
  66 0042 C630      		cpi r28,lo8(6)
  67 0044 01F4      		brne .L5
  47:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     }
  48:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  49:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   executeHandlers();	
  68               		.loc 1 49 0
  69 0046 0E94 0000 		call executeHandlers
  70               	.LVL9:
  50:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   blockTickRunning = 0;
  71               		.loc 1 50 0
  72 004a 1092 0000 		sts blockTickRunning,__zero_reg__
  73 004e 1092 0000 		sts blockTickRunning+1,__zero_reg__
  74               	/* epilogue start */
  51:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****   
  52:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** }
  75               		.loc 1 52 0
  76 0052 CF91      		pop r28
  77               	.LVL10:
  78 0054 0895      		ret
  79               	.LFE6:
  81               	.global	initBlock
  83               	initBlock:
  84               	.LFB7:
  53:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  54:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  55:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** // Ties all the horrifying subfunctions together into one simple function
  56:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** void initBlock()
  57:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** {
  85               		.loc 1 57 0
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
  58:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	//software initialization
  59:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initHandlers();
  90               		.loc 1 59 0
  91 0056 0E94 0000 		call initHandlers
  92               	.LVL11:
  60:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  61:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	//hardware related initialization
  62:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initTime();
  93               		.loc 1 62 0
  94 005a 0E94 0000 		call initTime
  95               	.LVL12:
  63:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  64:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initializeMemory();
  96               		.loc 1 64 0
  97 005e 0E94 0000 		call initializeMemory
  98               	.LVL13:
  65:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  66:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initPorts();
  99               		.loc 1 66 0
 100 0062 0E94 0000 		call initPorts
 101               	.LVL14:
  67:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  68:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #ifdef DEBUG
  69:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initDebug();
  70:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     	printf("System Debug Enabled\r\n");
  71:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #endif
  72:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  73:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initDataLink();	
 102               		.loc 1 73 0
 103 0066 0E94 0000 		call initDataLink
 104               	.LVL15:
  74:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  75:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****    	initHWLED();
 105               		.loc 1 75 0
 106 006a 0E94 0000 		call initHWLED
 107               	.LVL16:
  76:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	//initAudio();
  77:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  78:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initSystemMessage();
 108               		.loc 1 78 0
 109 006e 0E94 0000 		call initSystemMessage
 110               	.LVL17:
  79:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initEnsemble();
 111               		.loc 1 79 0
 112 0072 0E94 0000 		call initEnsemble
 113               	.LVL18:
  80:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  81:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initBlockTick();		// HW INITIALIZATION ROUTINE
 114               		.loc 1 81 0
 115 0076 0E94 0000 		call initBlockTick
 116               	.LVL19:
  82:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  83:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	initHWAccel();
 117               		.loc 1 83 0
 118 007a 0E94 0000 		call initHWAccel
 119               	.LVL20:
  84:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 	accelReady=1;
 120               		.loc 1 84 0
 121 007e 81E0      		ldi r24,lo8(1)
 122 0080 90E0      		ldi r25,0
 123 0082 8093 0000 		sts accelReady,r24
 124 0086 9093 0000 		sts accelReady+1,r25
  85:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** 
  86:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb **** #ifndef BBSIM
  87:/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/block.bb ****     initHWMic();
 125               		.loc 1 87 0
 126 008a 0C94 0000 		jmp initHWMic
 127               	.LVL21:
 128               	.LFE7:
 130               	.global	accelReady
 131               		.section .bss
 134               	accelReady:
 135 0000 0000      		.zero	2
 136               	.global	blockTickRunning
 139               	blockTickRunning:
 140 0002 0000      		.zero	2
 181               	.Letext0:
 182               		.file 2 "/usr/lib/gcc/avr/4.7.2/../../../avr/include/stdint.h"
 183               		.file 3 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/defs.bbh"
 184               		.file 4 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/serial.bbh"
 185               		.file 5 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/accelerometer.bbh"
 186               		.file 6 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/hardwaretime.bbh"
 187               		.file 7 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/data_link.bbh"
 188               		.file 8 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/../hw-api/hwDataLink.h
 189               		.file 9 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/handler.bbh"
 190               		.file 10 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/memory.bbh"
 191               		.file 11 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/../hw-api/hwLED.h"
 192               		.file 12 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/message.bbh"
 193               		.file 13 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/ensemble.bbh"
 194               		.file 14 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/../hw-api/hwBlockTick
 195               		.file 15 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/../hw-api/hwAccelerom
 196               		.file 16 "/home/dcampbel/Research/blinkyBocksHardware/build/src-bobby/system/../hw-api/hwMicrophon
DEFINED SYMBOLS
                            *ABS*:0000000000000000 block.c
     /tmp/ccXAlvhx.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXAlvhx.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXAlvhx.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXAlvhx.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccXAlvhx.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccXAlvhx.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXAlvhx.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXAlvhx.s:13     .text:0000000000000000 blockTick
     /tmp/ccXAlvhx.s:139    .bss:0000000000000002 blockTickRunning
     /tmp/ccXAlvhx.s:134    .bss:0000000000000000 accelReady
     /tmp/ccXAlvhx.s:83     .text:0000000000000056 initBlock

UNDEFINED SYMBOLS
newAccelData
updateAccel
checkTimeout
checkTimer
processBuffer
handleOneMessage
sendOnSerial
executeHandlers
initHandlers
initTime
initializeMemory
initPorts
initDataLink
initHWLED
initSystemMessage
initEnsemble
initBlockTick
initHWAccel
initHWMic
__do_clear_bss
