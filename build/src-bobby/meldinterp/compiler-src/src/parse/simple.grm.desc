10 shift/reduce conflicts
non-shiftable terminal used on the rhs of 0 rules
6 rules not reduced

warning: rule <decls : decl > will never be reduced
warning: rule <decls : decl decls > will never be reduced
warning: rule <rules : rule > will never be reduced
warning: rule <rules : rule rules > will never be reduced
warning: rule <thms : thm > will never be reduced
warning: rule <thms : thm COMMA thms > will never be reduced
warning: non-shiftable terminal EOFappears on the rhs of <program : uses parts EOF >
error:  state 107: shift/reduce conflict (shift RPAREN, reduce by rule 83)
error:  state 126: shift/reduce conflict (shift IDENT, reduce by rule 30)
error:  state 132: shift/reduce conflict (shift DOTPROD, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift EXP, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift CONS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift MOD, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift MINUS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift PLUS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift TIMES, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift DIVIDE, reduce by rule 78)

state 0:

	program : . uses parts EOF 

	USE	shift 2

	program	goto 188
	uses	goto 1

	.	reduce by rule 2


state 1:

	program : uses . parts EOF 

	IDENT	shift 16
	TYPE	shift 15
	EXTERN	shift 14
	CONST	shift 13
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	parts	goto 9
	decl	goto 8
	rule	goto 7
	thm	goto 6
	constdecl	goto 5
	thmTime	goto 4
	thmTimes	goto 3

	.	reduce by rule 6


state 2:

	uses : USE . STR uses 

	STR	shift 17


	.	error


state 3:

	rule : thmTimes . PROVES clauses DOT 
	rule : thmTimes . DOT 

	DOT	shift 19
	PROVES	shift 18


	.	error


state 4:

	thmTimes : thmTime .  (reduce by rule 35)
	thmTimes : thmTime . COMMA thmTimes 

	COMMA	shift 20


	.	reduce by rule 35


state 5:

	parts : constdecl . parts 

	IDENT	shift 16
	TYPE	shift 15
	EXTERN	shift 14
	CONST	shift 13
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	parts	goto 21
	decl	goto 8
	rule	goto 7
	thm	goto 6
	constdecl	goto 5
	thmTime	goto 4
	thmTimes	goto 3

	.	reduce by rule 6


state 6:

	thmTime : thm . AT time 
	thmTime : thm .  (reduce by rule 38)

	AT	shift 22


	.	reduce by rule 38


state 7:

	parts : rule . parts 

	IDENT	shift 16
	TYPE	shift 15
	EXTERN	shift 14
	CONST	shift 13
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	parts	goto 23
	decl	goto 8
	rule	goto 7
	thm	goto 6
	constdecl	goto 5
	thmTime	goto 4
	thmTimes	goto 3

	.	reduce by rule 6


state 8:

	parts : decl . parts 

	IDENT	shift 16
	TYPE	shift 15
	EXTERN	shift 14
	CONST	shift 13
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	parts	goto 24
	decl	goto 8
	rule	goto 7
	thm	goto 6
	constdecl	goto 5
	thmTime	goto 4
	thmTimes	goto 3

	.	reduce by rule 6


state 9:

	program : uses parts . EOF 

	EOF	shift 25


	.	error


state 10:

	thm : DELETE . LPAREN exp COMMA tuple RPAREN 

	LPAREN	shift 26


	.	error


state 11:

	thm : SCHEDULE . LPAREN exp COMMA tuple COMMA exp RPAREN 

	LPAREN	shift 27


	.	error


state 12:

	thm : BANG . IDENT LPAREN exps RPAREN 

	IDENT	shift 28


	.	error


state 13:

	constdecl : CONST . IDENT EQUAL const DOT 

	IDENT	shift 29


	.	error


state 14:

	decl : EXTERN . typ IDENT LPAREN typs RPAREN DOT 
	decl : EXTERN . typ IDENT LPAREN RPAREN DOT 
	decl : EXTERN . TYPE IDENT DOT 

	IDENT	shift 36
	LPAREN	shift 35
	TYPE	shift 34
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 30

	.	error


state 15:

	decl : TYPE . theorem LPAREN aggtyps RPAREN DOT 
	decl : TYPE . PERSISTENT theorem LPAREN aggtyps RPAREN DOT 

	IDENT	shift 41
	VIRTUALNEIGHBOR	shift 40
	LINEAR	shift 39
	PERSISTENT	shift 38

	theorem	goto 37

	.	error


state 16:

	thm : IDENT . LPAREN exps RPAREN 

	LPAREN	shift 42


	.	error


state 17:

	uses : USE STR . uses 

	USE	shift 2

	uses	goto 43

	.	reduce by rule 2


state 18:

	rule : thmTimes PROVES . clauses DOT 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 62
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57
	FORALL	shift 56
	BANG	shift 12
	DELTA	shift 55
	SCHEDULE	shift 11
	DELETE	shift 10
	PROVED	shift 54

	thm	goto 53
	exp	goto 52
	constraint	goto 51
	deltaexp	goto 50
	provedexp	goto 49
	clause	goto 48
	clauses	goto 47
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 19:

	rule : thmTimes DOT .  (reduce by rule 34)



	.	reduce by rule 34


state 20:

	thmTimes : thmTime COMMA . thmTimes 

	IDENT	shift 16
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	thm	goto 6
	thmTime	goto 4
	thmTimes	goto 65

	.	error


state 21:

	parts : constdecl parts .  (reduce by rule 4)



	.	reduce by rule 4


state 22:

	thmTime : thm AT . time 

	PLUS	shift 67

	time	goto 66

	.	error


state 23:

	parts : rule parts .  (reduce by rule 5)



	.	reduce by rule 5


state 24:

	parts : decl parts .  (reduce by rule 3)



	.	reduce by rule 3


state 25:

	program : uses parts EOF .  (reduce by rule 0)



	.	reduce by rule 0


state 26:

	thm : DELETE LPAREN . exp COMMA tuple RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 68
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 27:

	thm : SCHEDULE LPAREN . exp COMMA tuple COMMA exp RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 70
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 28:

	thm : BANG IDENT . LPAREN exps RPAREN 

	LPAREN	shift 71


	.	error


state 29:

	constdecl : CONST IDENT . EQUAL const DOT 

	EQUAL	shift 72


	.	error


state 30:

	decl : EXTERN typ . IDENT LPAREN typs RPAREN DOT 
	decl : EXTERN typ . IDENT LPAREN RPAREN DOT 
	typ : typ . LIST 
	typ : typ . SET 

	IDENT	shift 75
	LIST	shift 74
	SET	shift 73


	.	error


state 31:

	typ : ADDR .  (reduce by rule 25)



	.	reduce by rule 25


state 32:

	typ : FLOAT .  (reduce by rule 28)



	.	reduce by rule 28


state 33:

	typ : INT .  (reduce by rule 24)



	.	reduce by rule 24


state 34:

	decl : EXTERN TYPE . IDENT DOT 

	IDENT	shift 76


	.	error


state 35:

	typ : LPAREN . typs RPAREN 

	IDENT	shift 36
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 78
	typs	goto 77

	.	error


state 36:

	typ : IDENT .  (reduce by rule 30)



	.	reduce by rule 30


state 37:

	decl : TYPE theorem . LPAREN aggtyps RPAREN DOT 

	LPAREN	shift 79


	.	error


state 38:

	decl : TYPE PERSISTENT . theorem LPAREN aggtyps RPAREN DOT 

	IDENT	shift 41
	VIRTUALNEIGHBOR	shift 40
	LINEAR	shift 39

	theorem	goto 80

	.	error


state 39:

	theorem : LINEAR . IDENT 

	IDENT	shift 81


	.	error


state 40:

	theorem : VIRTUALNEIGHBOR . IDENT 

	IDENT	shift 82


	.	error


state 41:

	theorem : IDENT .  (reduce by rule 14)



	.	reduce by rule 14


state 42:

	thm : IDENT LPAREN . exps RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 84
	exps	goto 83
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 43:

	uses : USE STR uses .  (reduce by rule 1)



	.	reduce by rule 1


state 44:

	const : floatval .  (reduce by rule 54)



	.	reduce by rule 54


state 45:

	const : intval .  (reduce by rule 53)



	.	reduce by rule 53


state 46:

	exp : const .  (reduce by rule 76)



	.	reduce by rule 76


state 47:

	rule : thmTimes PROVES clauses . DOT 

	DOT	shift 85


	.	error


state 48:

	clauses : clause .  (reduce by rule 60)
	clauses : clause . COMMA clauses 

	COMMA	shift 86


	.	reduce by rule 60


state 49:

	clause : provedexp .  (reduce by rule 66)



	.	reduce by rule 66


state 50:

	clause : deltaexp .  (reduce by rule 65)



	.	reduce by rule 65


state 51:

	clause : constraint .  (reduce by rule 64)



	.	reduce by rule 64


state 52:

	exp : exp . binop exp 
	constraint : exp . cmpop exp 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	EQUAL	shift 94
	NEQUAL	shift 93
	LESS	shift 92
	GREATER	shift 91
	LESSEQ	shift 90
	GREATEREQ	shift 89

	binop	goto 88
	cmpop	goto 87

	.	error


state 53:

	clause : thm .  (reduce by rule 62)



	.	reduce by rule 62


state 54:

	provedexp : PROVED . LPAREN exp COMMA tuple RPAREN cmpop exp 

	LPAREN	shift 103


	.	error


state 55:

	deltaexp : DELTA . LPAREN deltathm RPAREN cmpop exp 

	LPAREN	shift 104


	.	error


state 56:

	clause : FORALL . thm LBRACKET clauses RBRACKET 

	IDENT	shift 16
	BANG	shift 12
	SCHEDULE	shift 11
	DELETE	shift 10

	thm	goto 105

	.	error


state 57:

	exp : ANY .  (reduce by rule 75)



	.	reduce by rule 75


state 58:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . exps RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 107
	exps	goto 106
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 59:

	const : HASH . INTNUM 

	INTNUM	shift 108


	.	error


state 60:

	exp : NIL .  (reduce by rule 77)



	.	reduce by rule 77


state 61:

	intval : MINUS . INTNUM 
	floatval : MINUS . FLOATNUM 

	INTNUM	shift 110
	FLOATNUM	shift 109


	.	error


state 62:

	thm : IDENT . LPAREN exps RPAREN 
	exp : IDENT .  (reduce by rule 74)
	exp : IDENT . LPAREN exps RPAREN 
	exp : IDENT . LPAREN RPAREN 

	LPAREN	shift 111


	.	reduce by rule 74


state 63:

	floatval : FLOATNUM .  (reduce by rule 58)



	.	reduce by rule 58


state 64:

	intval : INTNUM .  (reduce by rule 56)



	.	reduce by rule 56


state 65:

	thmTimes : thmTime COMMA thmTimes .  (reduce by rule 36)



	.	reduce by rule 36


state 66:

	thmTime : thm AT time .  (reduce by rule 37)



	.	reduce by rule 37


state 67:

	time : PLUS . intval MILLISECS 
	time : PLUS . intval SECS 

	INTNUM	shift 64
	MINUS	shift 113

	intval	goto 112

	.	error


state 68:

	thm : DELETE LPAREN exp . COMMA tuple RPAREN 
	exp : exp . binop exp 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	COMMA	shift 114

	binop	goto 88

	.	error


state 69:

	exp : IDENT .  (reduce by rule 74)
	exp : IDENT . LPAREN exps RPAREN 
	exp : IDENT . LPAREN RPAREN 

	LPAREN	shift 115


	.	reduce by rule 74


state 70:

	thm : SCHEDULE LPAREN exp . COMMA tuple COMMA exp RPAREN 
	exp : exp . binop exp 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	COMMA	shift 116

	binop	goto 88

	.	error


state 71:

	thm : BANG IDENT LPAREN . exps RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 84
	exps	goto 117
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 72:

	constdecl : CONST IDENT EQUAL . const DOT 

	INTNUM	shift 64
	FLOATNUM	shift 63
	MINUS	shift 61
	HASH	shift 59

	const	goto 118
	intval	goto 45
	floatval	goto 44

	.	error


state 73:

	typ : typ SET .  (reduce by rule 27)



	.	reduce by rule 27


state 74:

	typ : typ LIST .  (reduce by rule 26)



	.	reduce by rule 26


state 75:

	decl : EXTERN typ IDENT . LPAREN typs RPAREN DOT 
	decl : EXTERN typ IDENT . LPAREN RPAREN DOT 

	LPAREN	shift 119


	.	error


state 76:

	decl : EXTERN TYPE IDENT . DOT 

	DOT	shift 120


	.	error


state 77:

	typ : LPAREN typs . RPAREN 

	RPAREN	shift 121


	.	error


state 78:

	typ : typ . LIST 
	typ : typ . SET 
	typs : typ .  (reduce by rule 19)
	typs : typ . COMMA typs 

	COMMA	shift 122
	LIST	shift 74
	SET	shift 73


	.	reduce by rule 19


state 79:

	decl : TYPE theorem LPAREN . aggtyps RPAREN DOT 

	IDENT	shift 126
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	aggtyp	goto 125
	aggtyps	goto 124
	typ	goto 123

	.	error


state 80:

	decl : TYPE PERSISTENT theorem . LPAREN aggtyps RPAREN DOT 

	LPAREN	shift 127


	.	error


state 81:

	theorem : LINEAR IDENT .  (reduce by rule 16)



	.	reduce by rule 16


state 82:

	theorem : VIRTUALNEIGHBOR IDENT .  (reduce by rule 15)



	.	reduce by rule 15


state 83:

	thm : IDENT LPAREN exps . RPAREN 

	RPAREN	shift 128


	.	error


state 84:

	exp : exp . binop exp 
	exps : exp .  (reduce by rule 83)
	exps : exp . COMMA exps 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	COMMA	shift 129

	binop	goto 88

	.	reduce by rule 83


state 85:

	rule : thmTimes PROVES clauses DOT .  (reduce by rule 33)



	.	reduce by rule 33


state 86:

	clauses : clause COMMA . clauses 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 62
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57
	FORALL	shift 56
	BANG	shift 12
	DELTA	shift 55
	SCHEDULE	shift 11
	DELETE	shift 10
	PROVED	shift 54

	thm	goto 53
	exp	goto 52
	constraint	goto 51
	deltaexp	goto 50
	provedexp	goto 49
	clause	goto 48
	clauses	goto 130
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 87:

	constraint : exp cmpop . exp 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 131
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 88:

	exp : exp binop . exp 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 132
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 89:

	cmpop : GREATEREQ .  (reduce by rule 73)



	.	reduce by rule 73


state 90:

	cmpop : LESSEQ .  (reduce by rule 72)



	.	reduce by rule 72


state 91:

	cmpop : GREATER .  (reduce by rule 71)



	.	reduce by rule 71


state 92:

	cmpop : LESS .  (reduce by rule 70)



	.	reduce by rule 70


state 93:

	cmpop : NEQUAL .  (reduce by rule 69)



	.	reduce by rule 69


state 94:

	cmpop : EQUAL .  (reduce by rule 68)



	.	reduce by rule 68


state 95:

	binop : DOTPROD .  (reduce by rule 92)



	.	reduce by rule 92


state 96:

	binop : EXP .  (reduce by rule 91)



	.	reduce by rule 91


state 97:

	binop : CONS .  (reduce by rule 85)



	.	reduce by rule 85


state 98:

	binop : MOD .  (reduce by rule 90)



	.	reduce by rule 90


state 99:

	binop : MINUS .  (reduce by rule 89)



	.	reduce by rule 89


state 100:

	binop : PLUS .  (reduce by rule 88)



	.	reduce by rule 88


state 101:

	binop : TIMES .  (reduce by rule 87)



	.	reduce by rule 87


state 102:

	binop : DIVIDE .  (reduce by rule 86)



	.	reduce by rule 86


state 103:

	provedexp : PROVED LPAREN . exp COMMA tuple RPAREN cmpop exp 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 133
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 104:

	deltaexp : DELTA LPAREN . deltathm RPAREN cmpop exp 

	IDENT	shift 136

	deltathm	goto 135
	deltavar	goto 134

	.	error


state 105:

	clause : FORALL thm . LBRACKET clauses RBRACKET 

	LBRACKET	shift 137


	.	error


state 106:

	exp : LPAREN exps . RPAREN 

	RPAREN	shift 138


	.	error

error:  state 107: shift/reduce conflict (shift RPAREN, reduce by rule 83)

state 107:

	exp : exp . binop exp 
	exp : LPAREN exp . RPAREN 
	exps : exp .  (reduce by rule 83)
	exps : exp . COMMA exps 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	COMMA	shift 129
	RPAREN	shift 139

	binop	goto 88

	.	error


state 108:

	const : HASH INTNUM .  (reduce by rule 55)



	.	reduce by rule 55


state 109:

	floatval : MINUS FLOATNUM .  (reduce by rule 59)



	.	reduce by rule 59


state 110:

	intval : MINUS INTNUM .  (reduce by rule 57)



	.	reduce by rule 57


state 111:

	thm : IDENT LPAREN . exps RPAREN 
	exp : IDENT LPAREN . exps RPAREN 
	exp : IDENT LPAREN . RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	RPAREN	shift 141
	ANY	shift 57

	exp	goto 84
	exps	goto 140
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 112:

	time : PLUS intval . MILLISECS 
	time : PLUS intval . SECS 

	SECS	shift 143
	MILLISECS	shift 142


	.	error


state 113:

	intval : MINUS . INTNUM 

	INTNUM	shift 110


	.	error


state 114:

	thm : DELETE LPAREN exp COMMA . tuple RPAREN 

	IDENT	shift 145

	tuple	goto 144

	.	error


state 115:

	exp : IDENT LPAREN . exps RPAREN 
	exp : IDENT LPAREN . RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	RPAREN	shift 141
	ANY	shift 57

	exp	goto 84
	exps	goto 146
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 116:

	thm : SCHEDULE LPAREN exp COMMA . tuple COMMA exp RPAREN 

	IDENT	shift 145

	tuple	goto 147

	.	error


state 117:

	thm : BANG IDENT LPAREN exps . RPAREN 

	RPAREN	shift 148


	.	error


state 118:

	constdecl : CONST IDENT EQUAL const . DOT 

	DOT	shift 149


	.	error


state 119:

	decl : EXTERN typ IDENT LPAREN . typs RPAREN DOT 
	decl : EXTERN typ IDENT LPAREN . RPAREN DOT 

	IDENT	shift 36
	LPAREN	shift 35
	RPAREN	shift 151
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 78
	typs	goto 150

	.	error


state 120:

	decl : EXTERN TYPE IDENT DOT .  (reduce by rule 13)



	.	reduce by rule 13


state 121:

	typ : LPAREN typs RPAREN .  (reduce by rule 29)



	.	reduce by rule 29


state 122:

	typs : typ COMMA . typs 

	IDENT	shift 36
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 78
	typs	goto 152

	.	error


state 123:

	aggtyp : typ .  (reduce by rule 21)
	aggtyp : typ . IDENT typ 
	typ : typ . LIST 
	typ : typ . SET 

	IDENT	shift 153
	LIST	shift 74
	SET	shift 73


	.	reduce by rule 21


state 124:

	decl : TYPE theorem LPAREN aggtyps . RPAREN DOT 

	RPAREN	shift 154


	.	error


state 125:

	aggtyps : aggtyp .  (reduce by rule 17)
	aggtyps : aggtyp . COMMA aggtyps 

	COMMA	shift 155


	.	reduce by rule 17

error:  state 126: shift/reduce conflict (shift IDENT, reduce by rule 30)

state 126:

	aggtyp : IDENT . typ 
	typ : IDENT .  (reduce by rule 30)

	IDENT	shift 36
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 156

	.	reduce by rule 30


state 127:

	decl : TYPE PERSISTENT theorem LPAREN . aggtyps RPAREN DOT 

	IDENT	shift 126
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	aggtyp	goto 125
	aggtyps	goto 157
	typ	goto 123

	.	error


state 128:

	thm : IDENT LPAREN exps RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 129:

	exps : exp COMMA . exps 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 84
	exps	goto 158
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 130:

	clauses : clause COMMA clauses .  (reduce by rule 61)



	.	reduce by rule 61


state 131:

	exp : exp . binop exp 
	constraint : exp cmpop exp .  (reduce by rule 67)

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95

	binop	goto 88

	.	reduce by rule 67

error:  state 132: shift/reduce conflict (shift DOTPROD, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift EXP, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift CONS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift MOD, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift MINUS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift PLUS, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift TIMES, reduce by rule 78)
error:  state 132: shift/reduce conflict (shift DIVIDE, reduce by rule 78)

state 132:

	exp : exp . binop exp 
	exp : exp binop exp .  (reduce by rule 78)

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95

	binop	goto 88

	.	reduce by rule 78


state 133:

	exp : exp . binop exp 
	provedexp : PROVED LPAREN exp . COMMA tuple RPAREN cmpop exp 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	COMMA	shift 159

	binop	goto 88

	.	error


state 134:

	deltathm : deltavar . SEMI IDENT LPAREN exps RPAREN 

	SEMI	shift 160


	.	error


state 135:

	deltaexp : DELTA LPAREN deltathm . RPAREN cmpop exp 

	RPAREN	shift 161


	.	error


state 136:

	deltavar : IDENT .  (reduce by rule 43)



	.	reduce by rule 43


state 137:

	clause : FORALL thm LBRACKET . clauses RBRACKET 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 62
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57
	FORALL	shift 56
	BANG	shift 12
	DELTA	shift 55
	SCHEDULE	shift 11
	DELETE	shift 10
	PROVED	shift 54

	thm	goto 53
	exp	goto 52
	constraint	goto 51
	deltaexp	goto 50
	provedexp	goto 49
	clause	goto 48
	clauses	goto 162
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 138:

	exp : LPAREN exps RPAREN .  (reduce by rule 82)



	.	reduce by rule 82


state 139:

	exp : LPAREN exp RPAREN .  (reduce by rule 81)



	.	reduce by rule 81


state 140:

	thm : IDENT LPAREN exps . RPAREN 
	exp : IDENT LPAREN exps . RPAREN 

	RPAREN	shift 163


	.	error


state 141:

	exp : IDENT LPAREN RPAREN .  (reduce by rule 80)



	.	reduce by rule 80


state 142:

	time : PLUS intval MILLISECS .  (reduce by rule 39)



	.	reduce by rule 39


state 143:

	time : PLUS intval SECS .  (reduce by rule 40)



	.	reduce by rule 40


state 144:

	thm : DELETE LPAREN exp COMMA tuple . RPAREN 

	RPAREN	shift 164


	.	error


state 145:

	tuple : IDENT .  (reduce by rule 51)



	.	reduce by rule 51


state 146:

	exp : IDENT LPAREN exps . RPAREN 

	RPAREN	shift 165


	.	error


state 147:

	thm : SCHEDULE LPAREN exp COMMA tuple . COMMA exp RPAREN 

	COMMA	shift 166


	.	error


state 148:

	thm : BANG IDENT LPAREN exps RPAREN .  (reduce by rule 48)



	.	reduce by rule 48


state 149:

	constdecl : CONST IDENT EQUAL const DOT .  (reduce by rule 52)



	.	reduce by rule 52


state 150:

	decl : EXTERN typ IDENT LPAREN typs . RPAREN DOT 

	RPAREN	shift 167


	.	error


state 151:

	decl : EXTERN typ IDENT LPAREN RPAREN . DOT 

	DOT	shift 168


	.	error


state 152:

	typs : typ COMMA typs .  (reduce by rule 20)



	.	reduce by rule 20


state 153:

	aggtyp : typ IDENT . typ 

	IDENT	shift 36
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	typ	goto 169

	.	error


state 154:

	decl : TYPE theorem LPAREN aggtyps RPAREN . DOT 

	DOT	shift 170


	.	error


state 155:

	aggtyps : aggtyp COMMA . aggtyps 

	IDENT	shift 126
	LPAREN	shift 35
	INT	shift 33
	FLOAT	shift 32
	ADDR	shift 31

	aggtyp	goto 125
	aggtyps	goto 171
	typ	goto 123

	.	error


state 156:

	aggtyp : IDENT typ .  (reduce by rule 22)
	typ : typ . LIST 
	typ : typ . SET 

	LIST	shift 74
	SET	shift 73


	.	reduce by rule 22


state 157:

	decl : TYPE PERSISTENT theorem LPAREN aggtyps . RPAREN DOT 

	RPAREN	shift 172


	.	error


state 158:

	exps : exp COMMA exps .  (reduce by rule 84)



	.	reduce by rule 84


state 159:

	provedexp : PROVED LPAREN exp COMMA . tuple RPAREN cmpop exp 

	IDENT	shift 145

	tuple	goto 173

	.	error


state 160:

	deltathm : deltavar SEMI . IDENT LPAREN exps RPAREN 

	IDENT	shift 174


	.	error


state 161:

	deltaexp : DELTA LPAREN deltathm RPAREN . cmpop exp 

	EQUAL	shift 94
	NEQUAL	shift 93
	LESS	shift 92
	GREATER	shift 91
	LESSEQ	shift 90
	GREATEREQ	shift 89

	cmpop	goto 175

	.	error


state 162:

	clause : FORALL thm LBRACKET clauses . RBRACKET 

	RBRACKET	shift 176


	.	error


state 163:

	thm : IDENT LPAREN exps RPAREN .  (reduce by rule 47)
	exp : IDENT LPAREN exps RPAREN .  (reduce by rule 79)

	DIVIDE	reduce by rule 79
	TIMES	reduce by rule 79
	PLUS	reduce by rule 79
	MINUS	reduce by rule 79
	MOD	reduce by rule 79
	CONS	reduce by rule 79
	EXP	reduce by rule 79
	DOTPROD	reduce by rule 79
	DOT	reduce by rule 47
	COMMA	reduce by rule 47
	EQUAL	reduce by rule 79
	NEQUAL	reduce by rule 79
	LESS	reduce by rule 79
	GREATER	reduce by rule 79
	LESSEQ	reduce by rule 79
	GREATEREQ	reduce by rule 79
	RBRACKET	reduce by rule 47


	.	error


state 164:

	thm : DELETE LPAREN exp COMMA tuple RPAREN .  (reduce by rule 46)



	.	reduce by rule 46


state 165:

	exp : IDENT LPAREN exps RPAREN .  (reduce by rule 79)



	.	reduce by rule 79


state 166:

	thm : SCHEDULE LPAREN exp COMMA tuple COMMA . exp RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 177
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 167:

	decl : EXTERN typ IDENT LPAREN typs RPAREN . DOT 

	DOT	shift 178


	.	error


state 168:

	decl : EXTERN typ IDENT LPAREN RPAREN DOT .  (reduce by rule 12)



	.	reduce by rule 12


state 169:

	aggtyp : typ IDENT typ .  (reduce by rule 23)
	typ : typ . LIST 
	typ : typ . SET 

	LIST	shift 74
	SET	shift 73


	.	reduce by rule 23


state 170:

	decl : TYPE theorem LPAREN aggtyps RPAREN DOT .  (reduce by rule 9)



	.	reduce by rule 9


state 171:

	aggtyps : aggtyp COMMA aggtyps .  (reduce by rule 18)



	.	reduce by rule 18


state 172:

	decl : TYPE PERSISTENT theorem LPAREN aggtyps RPAREN . DOT 

	DOT	shift 179


	.	error


state 173:

	provedexp : PROVED LPAREN exp COMMA tuple . RPAREN cmpop exp 

	RPAREN	shift 180


	.	error


state 174:

	deltathm : deltavar SEMI IDENT . LPAREN exps RPAREN 

	LPAREN	shift 181


	.	error


state 175:

	deltaexp : DELTA LPAREN deltathm RPAREN cmpop . exp 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 182
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 176:

	clause : FORALL thm LBRACKET clauses RBRACKET .  (reduce by rule 63)



	.	reduce by rule 63


state 177:

	thm : SCHEDULE LPAREN exp COMMA tuple COMMA exp . RPAREN 
	exp : exp . binop exp 

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95
	RPAREN	shift 183

	binop	goto 88

	.	error


state 178:

	decl : EXTERN typ IDENT LPAREN typs RPAREN DOT .  (reduce by rule 11)



	.	reduce by rule 11


state 179:

	decl : TYPE PERSISTENT theorem LPAREN aggtyps RPAREN DOT .  (reduce by rule 10)



	.	reduce by rule 10


state 180:

	provedexp : PROVED LPAREN exp COMMA tuple RPAREN . cmpop exp 

	EQUAL	shift 94
	NEQUAL	shift 93
	LESS	shift 92
	GREATER	shift 91
	LESSEQ	shift 90
	GREATEREQ	shift 89

	cmpop	goto 184

	.	error


state 181:

	deltathm : deltavar SEMI IDENT LPAREN . exps RPAREN 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 84
	exps	goto 185
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 182:

	exp : exp . binop exp 
	deltaexp : DELTA LPAREN deltathm RPAREN cmpop exp .  (reduce by rule 41)

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95

	binop	goto 88

	.	reduce by rule 41


state 183:

	thm : SCHEDULE LPAREN exp COMMA tuple COMMA exp RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 184:

	provedexp : PROVED LPAREN exp COMMA tuple RPAREN cmpop . exp 

	INTNUM	shift 64
	FLOATNUM	shift 63
	IDENT	shift 69
	MINUS	shift 61
	NIL	shift 60
	HASH	shift 59
	LPAREN	shift 58
	ANY	shift 57

	exp	goto 186
	const	goto 46
	intval	goto 45
	floatval	goto 44

	.	error


state 185:

	deltathm : deltavar SEMI IDENT LPAREN exps . RPAREN 

	RPAREN	shift 187


	.	error


state 186:

	exp : exp . binop exp 
	provedexp : PROVED LPAREN exp COMMA tuple RPAREN cmpop exp .  (reduce by rule 44)

	DIVIDE	shift 102
	TIMES	shift 101
	PLUS	shift 100
	MINUS	shift 99
	MOD	shift 98
	CONS	shift 97
	EXP	shift 96
	DOTPROD	shift 95

	binop	goto 88

	.	reduce by rule 44


state 187:

	deltathm : deltavar SEMI IDENT LPAREN exps RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 188:


	EOF	accept


	.	error

281 of 657 action table entries left after compaction
176 goto table entries
