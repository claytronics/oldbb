const unsigned char meld_prog[] = {
/* NUMBER OF PREDICATES */
0xe, 
/* NUMBER OF RULES */
0x2, 
/* OFFSETS TO PREDICATE DESCRIPTORS */
0x22, 0, 
0x28, 0, 
0x2f, 0, 
0x38, 0, 
0x40, 0, 
0x47, 0, 
0x4e, 0, 
0x54, 0, 
0x5b, 0, 
0x61, 0, 
0x69, 0, 
0x70, 0, 
0x77, 0, 
0x7d, 0, 
/* OFFSETS TO RULE DESCRIPTORS */
0x84, 0, 
0x89, 0, 
/* PREDICATE DESCRIPTORS */
0x8e, 0, 0x4, 0, 0, 0, 
0x8f, 0, 0x4, 0, 0x1, 0x1, 0x1, 
0x90, 0, 0x4, 0, 0x1, 0x3, 0, 0, 0, 
0x91, 0, 0x4, 0, 0x1, 0x2, 0x2, 0x9, 
0x92, 0, 0x4, 0, 0x1, 0x1, 0x9, 
0x93, 0, 0x4, 0, 0x1, 0x1, 0x1, 
0x94, 0, 0x4, 0, 0x1, 0, 
0x95, 0, 0, 0, 0x1, 0x1, 0, 
0x96, 0, 0x4, 0, 0x1, 0, 
0x97, 0, 0x20, 0, 0, 0x2, 0x2, 0, 
0x98, 0, 0, 0, 0x1, 0x1, 0, 
0x99, 0, 0, 0, 0x1, 0x1, 0, 
0x9a, 0, 0x4, 0, 0x1, 0, 
0x9b, 0, 0x4, 0, 0x1, 0x1, 0, 
/* RULE DESCRIPTORS */
0x9c, 0, 0, 0x1, 0, 
0xde, 0, 0, 0x1, 0xd, 
/* PREDICATE BYTECODE */
/* Predicate 0: */0xd0, 
/* Predicate 1: */0, 
/* Predicate 2: */0, 
/* Predicate 3: */0, 
/* Predicate 4: */0, 
/* Predicate 5: */0, 
/* Predicate 6: */0, 
/* Predicate 7: */0, 
/* Predicate 8: */0, 
/* Predicate 9: */0, 
/* Predicate 10: */0, 
/* Predicate 11: */0, 
/* Predicate 12: */0, 
/* Predicate 13: */0, 
/* RULE BYTECODE */
/* Rule 0: */0x10, 0, 0, 0, 0, 0x5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0x15, 0, 0, 0, 0x3c, 0, 0, 0, 0, 0x11, 0x80, 0, 0x40, 0xd, 0, 0x1e, 0, 0, 0, 0, 0, 0, 0x77, 0, 0x40, 0x7, 0, 0x1e, 0, 0, 0, 0, 0, 0, 0x79, 0, 0x23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xf0, 0x1, 0, 
/* Rule 1: */0x10, 0x1, 0, 0, 0, 0x5, 0, 0, 0, 0, 0, 0, 0, 0, 0xd, 0, 0x1, 0x15, 0, 0, 0, 0x3f, 0, 0, 0, 0, 0x40, 0x7, 0x1, 0x21, 0, 0, 0, 0x1, 0x79, 0x1, 0x22, 0, 0, 0x1, 0x1f, 0x1, 0, 0, 0, 0x2, 0x3d, 0x1, 0x2, 0x1, 0x1f, 0x8, 0, 0, 0, 0x2, 0x7d, 0x1, 0x2, 0x1, 0x26, 0x1, 0, 0, 0x7b, 0, 0xf0, 0x1, 0, };

char *tuple_names[] = {"_init", "set-priority", "setcolor", "setedgelabel", "write-string", "add-priority", "schedule-next", "setcolor2", "stop-program", "neighbor", "vacant", "neighborcount", "tap", "color", };

char *rule_names[] = {"init -o axioms", "color(N) -o !setColor2(N), color((N + 1) % 8).", };

#include "extern_functions.bbh"
Register (*extern_functs[])() = {};

int extern_functs_args[] = {};
