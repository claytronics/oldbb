const unsigned char meld_prog[] = {
/* NUMBER OF PREDICATES */
0x13, 
/* NUMBER OF RULES */
0xd, 
/* OFFSET TO PREDICATE DESCRIPTORS */
0x15, 
0x1c, 
0x24, 
0x2e, 
0x37, 
0x3f, 
0x47, 
0x4e, 
0x56, 
0x5d, 
0x66, 
0x6e, 
0x76, 
0x7d, 
0x85, 
0x8d, 
0x95, 
0x9d, 
0xa5, 
/* PREDICATE DESCRIPTORS */
0xc7, 0, 0x4, 0, 0, 0, 0, 
0xc8, 0, 0x4, 0, 0x1, 0x1, 0, 0x1, 
0xc9, 0, 0x4, 0, 0x1, 0x3, 0, 0, 0, 0, 
0xca, 0, 0x4, 0, 0x1, 0x2, 0, 0x2, 0x9, 
0xcb, 0, 0x4, 0, 0x1, 0x1, 0, 0x9, 
0xcc, 0, 0x4, 0, 0x1, 0x1, 0, 0x1, 
0xcd, 0, 0x4, 0, 0x1, 0, 0, 
0xce, 0, 0x2, 0, 0x1, 0x1, 0, 0, 
0xcf, 0, 0x4, 0, 0x1, 0, 0, 
0xd0, 0, 0x22, 0, 0, 0x2, 0, 0x2, 0, 
0x51, 0x1, 0x3, 0x20, 0x1, 0x1, 0, 0, 
0xa, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
0x1e, 0x2, 0x2, 0, 0x1, 0, 0, 
0x31, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
0x45, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
0x59, 0x2, 0x2, 0, 0x1, 0x1, 0, 0, 
0x79, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
0xa5, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
0xde, 0x2, 0x22, 0, 0, 0x1, 0, 0x2, 
/* OFFSETS TO RULE BYTECODE */
0x17, 0x3, 
0x41, 0x3, 
0x42, 0x3, 
0x43, 0x3, 
0x44, 0x3, 
0x45, 0x3, 
0x46, 0x3, 
0x47, 0x3, 
0x48, 0x3, 
0x49, 0x3, 
0x4a, 0x3, 
0x4b, 0x3, 
0x4c, 0x3, 
/* PREDICATE BYTECODE */
/* Predicate 0: */0xd0, 
/* Predicate 1: */0, 
/* Predicate 2: */0, 
/* Predicate 3: */0, 
/* Predicate 4: */0, 
/* Predicate 5: */0, 
/* Predicate 6: */0, 
/* Predicate 7: */0, 
/* Predicate 8: */0, 
/* Predicate 9: */0x10, 0x4, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x5, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0xb, 0x1, 0x21, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x6, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0xd, 0x1, 0x21, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x7, 0, 0, 0, 0x22, 0x1, 0, 0x1, 0x1f, 0, 0, 0, 0, 0x2, 0x3c, 0x1, 0x2, 0x1, 0x60, 0x1, 0x25, 0, 0, 0, 0x22, 0x1, 0, 0x1, 0x1f, 0x5, 0, 0, 0, 0x2, 0x3c, 0x1, 0x2, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0xe, 0x1, 0x21, 0, 0, 0, 0x1, 0x78, 0x1, 0, 
/* Predicate 10: */0x10, 0x9, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x10, 0x1, 0x1, 0x15, 0, 0, 0, 0x26, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x21, 0, 0, 0, 0x2, 0x22, 0, 0x1, 0x3, 0x8, 0x2, 0x3, 0x1, 0x10, 0xa, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x11, 0x1, 0x1, 0x15, 0, 0, 0, 0x33, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x22, 0, 0, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3d, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x22, 0, 0x1, 0x3, 0x8, 0x2, 0x3, 0x1, 0x10, 0xb, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x12, 0x1, 0x1, 0x15, 0, 0, 0, 0x33, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x22, 0, 0, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3a, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x22, 0, 0x1, 0x3, 0x8, 0x2, 0x3, 0x1, 0x10, 0xc, 0, 0, 0, 0x11, 0x40, 0x7, 0x1, 0x22, 0, 0, 0x2, 0x1f, 0x9, 0, 0, 0, 0x3, 0x7d, 0x2, 0x3, 0x2, 0x26, 0x2, 0, 0x1, 0x79, 0x1, 0, 
/* Predicate 11: */0x10, 0x2, 0, 0, 0, 0x11, 0x40, 0x11, 0x1, 0x28, 0, 0x1, 0x22, 0, 0, 0x2, 0x8, 0x1, 0x2, 0, 
/* Predicate 12: */0x10, 0x8, 0, 0, 0, 0x11, 0x40, 0xa, 0, 0x1e, 0, 0, 0, 0, 0, 0, 0x78, 0, 0, 
/* Predicate 13: */0x10, 0x1, 0, 0, 0, 0x11, 0x40, 0x12, 0x1, 0x28, 0, 0x1, 0x22, 0, 0, 0x2, 0x8, 0x1, 0x2, 0, 
/* Predicate 14: */0x10, 0x3, 0, 0, 0, 0x11, 0x40, 0x10, 0x1, 0x28, 0, 0x1, 0x22, 0, 0, 0x2, 0x8, 0x1, 0x2, 0, 
/* Predicate 15: */0x10, 0x5, 0, 0, 0, 0x22, 0, 0, 0x2, 0x1f, 0x5, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0xc, 0, 0, 0, 0x11, 0x40, 0xc, 0x1, 0x78, 0x1, 0, 
/* Predicate 16: */0x10, 0x9, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xa, 0x1, 0x1, 0x15, 0, 0, 0, 0x26, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x21, 0, 0x1, 0, 0x2, 0x22, 0, 0, 0x3, 0x8, 0x2, 0x3, 0x1, 0, 
/* Predicate 17: */0x10, 0xa, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xa, 0x1, 0x1, 0x15, 0, 0, 0, 0x33, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x22, 0, 0x1, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3d, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x22, 0, 0, 0x3, 0x8, 0x2, 0x3, 0x1, 0, 
/* Predicate 18: */0x10, 0xb, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xa, 0x1, 0x1, 0x15, 0, 0, 0, 0x33, 0, 0, 0, 0, 0x11, 0x40, 0xa, 0x2, 0x22, 0, 0x1, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3a, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x22, 0, 0, 0x3, 0x8, 0x2, 0x3, 0x1, 0, 
/* RULE BYTECODE */
/* Rule 0: */0x10, 0, 0, 0, 0, 0x5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0x15, 0, 0, 0, 0x24, 0, 0, 0, 0, 0x11, 0x80, 0, 0x23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xf0, 0x1, 0, 
/* Rule 1: */0, 
/* Rule 2: */0, 
/* Rule 3: */0, 
/* Rule 4: */0, 
/* Rule 5: */0, 
/* Rule 6: */0, 
/* Rule 7: */0, 
/* Rule 8: */0, 
/* Rule 9: */0, 
/* Rule 10: */0, 
/* Rule 11: */0, 
/* Rule 12: */0, };

char *tuple_names[] = {"_init", "set-priority", "setcolor", "setedgelabel", "write-string", "add-priority", "schedule-next", "setcolor2", "stop-program", "neighbor", "level", "bottomNeighbor", "noBottomNeighbor", "topNeighbor", "sideNeighbor", "vacant", "___robhgieNedis", "___robhgieNmottob", "___robhgieNpot", };

#include "extern_functions.bbh"
Register (*extern_functs[])() = {};

int extern_functs_args[] = {};
