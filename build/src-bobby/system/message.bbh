#ifndef __MESSAGE_H__
#define __MESSAGE_H__

#include "defs.bbh"
#include "hardwaretime.bbh"
#include "ensemble.bbh"
#include "memory.bbh"
#include "../hw-api/hwDataLink.h"
//#innclude "data_link.bbh"


//-------- RESERVED MESSAGE TYPES
//
//	These are likely only used by the system routines.  Different frame delimiters are used so there's no collision.
//

#define	MSG_NEIGHBOR_START 	0x01				// we can send this on startup
#define	MSG_NEIGHBOR_RESPONSE	0x02			// neighbor data
#define	MSG_NEIGHBOR_KEEPALIVE	0x03		// a packet used for building a gradient/tree to the closest user comm port


//----------- SYSTEM MESSAGE HANDLERS

//----------- SEND MESSAGE to UID/PORT
//
//  Takes a dest as either UID or Port (broadcast not allowed).
//  msg is a char array of length Length which will be copied into a chunk and sent.
//  WARNING: Don't BROADCAST - you MUST do this manually by sending to all 6 faces
//           since it requires 6 memory chunks
//
//  inputs: c - pointer to a memory chunk (1 per message required)
//          dest - destination of the message (ie. to what UID/through which face)
//          msg - byte array of message data
//          length - length of your message
//          mh - handler receive block is to call on receipt of this message
//          cb - (optional) handler send block is to call on unsuccessful send
// returns: 1 - message formatted and queued for sending
//          0 - format error or unable to queue message
byte sendMessageToUid(Chunk * c, Uid dest, byte * msg, byte length, MsgHandler mh, GenericHandler cb);
byte sendMessageToPort(Chunk * c, PRef dest, byte * msg, byte length, MsgHandler mh, GenericHandler cb);


// ----------- SEND SYSTEM MESSAGE to PORT
//
// Probably shouldn't be used by a user, but needed by various sytem routines.
// Same parameters as 'sendMessagetoPort' defined above, but draws from a small pool of system 
//     allocated chunks rather than a user allocated chunk
byte sendSystemMessage(PRef dest, byte * msg, byte length, MsgHandler mh, GenericHandler cb);
void initSystemMessage(void);

#endif
